events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    upstream api {
        server server:8000;
    }

    upstream logs {
        server dozzle:8080;
    }
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri$is_args$args;
    }

    server {
        listen       8443 ssl default_server;
        listen       [::]:8443 ssl default_server;
        server_name  _;
        include /etc/nginx/default.d/*.conf;
        ssl_certificate "/var/www/fullchain.pem";
        ssl_certificate_key "/var/www/privkey.pem";

        location /admin {
            alias /usr/share/nginx/html/;
            try_files $uri $uri/index.html /index.html;
        }

        location /logs {
            proxy_pass http://logs;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 24h;
        }

        location /docs {
            return 301 $scheme://$http_host/docs/;
        }

        location /docs/ {
            alias /var/www/docs/;
            try_files $uri $uri/index.html /index.html;
        }

        location /coverage {
            return 301 $scheme://$http_host/coverage/;
        }

        location /coverage/ {
            alias /var/www/coverage/;
            try_files $uri $uri/index.html /index.html;
        }

        location ~ ^/api/(.*) {
            proxy_pass http://api/$1$is_args$args;
        }

        location ~ ^/error/(.*) {
            proxy_pass http://api/error/$1$is_args$args;
        }
    }
}
